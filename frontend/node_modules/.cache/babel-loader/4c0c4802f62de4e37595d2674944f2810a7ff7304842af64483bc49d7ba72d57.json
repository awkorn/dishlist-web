{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexk\\\\DishList\\\\dishlist-web\\\\frontend\\\\src\\\\components\\\\TestConnections.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestConnection = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const testConnection = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_API_URL}/`);\n      const data = await response.text(); // Since backend sends a plain string\n      setMessage(data);\n    } catch (error) {\n      console.error('Error connecting to backend:', error);\n      setMessage('Failed to connect to backend.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Backend Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testConnection,\n      children: \"Test Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Response: \", message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TestConnection, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = TestConnection;\nexport default TestConnection;\nvar _c;\n$RefreshReg$(_c, \"TestConnection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TestConnection","_s","message","setMessage","testConnection","response","fetch","process","env","REACT_APP_BACKEND_API_URL","data","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alexk/DishList/dishlist-web/frontend/src/components/TestConnections.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TestConnection = () => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_API_URL}/`);\r\n      const data = await response.text();  // Since backend sends a plain string\r\n      setMessage(data);\r\n    } catch (error) {\r\n      console.error('Error connecting to backend:', error);\r\n      setMessage('Failed to connect to backend.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Test Backend Connection</h2>\r\n      <button onClick={testConnection}>Test Connection</button>\r\n      {message && <p>Response: {message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestConnection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,GAAG,CAAC;MACzE,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAE;MACrCR,UAAU,CAACO,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDT,UAAU,CAAC,+BAA+B,CAAC;IAC7C;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnB,OAAA;MAAQoB,OAAO,EAAEf,cAAe;MAAAU,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDhB,OAAO,iBAAIH,OAAA;MAAAe,QAAA,GAAG,YAAU,EAACZ,OAAO;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACjB,EAAA,CArBID,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}